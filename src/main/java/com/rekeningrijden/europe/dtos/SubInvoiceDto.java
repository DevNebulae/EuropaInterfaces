package com.rekeningrijden.europe.dtos;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import lombok.NonNull;

import java.io.Serializable;

/**
 * Invoice data transfer object used to communicate via a uniform way with
 * the international European systems.
 * <p>
 * Note that there are a few fields missing, which the reasoning is behind as
 * follows:
 *  <ul>
 *      <li>
 *          Translocations will not be sent over the wire due to the immense
 *          size. Remember that the simulation system generates about 2.000.000
 *          records <i>per week</i> for one country. If a vehicle owner wants
 *          to view the associated translocations, an external API needs to be
 *          consulted.
 *      </li>
 *  </ul>
 */
@Data
@NoArgsConstructor
@AllArgsConstructor
public class SubInvoiceDto implements Serializable {
    /**
     * Primary key. The convention decided in the Europe group is a UUID.
     */
    @NonNull
    private String invoiceNumber;

    /**
     * The unique car tracker id which this invoice was generated by.
     */
    @NonNull
    private String carTrackerId;

    /**
     * Country which has issued the invoice. The money owed needs to be payed
     * to the country which issued the invoice.
     */
    @NonNull
    private String country;

    /**
     * Status indication whether the invoice was paid or not.
     */
    @NonNull
    private String paymentStatus;

    /**
     * Date when the invoice was issued.
     */
    @NonNull
    private String invoiceDate;

    /**
     * Price calculated by the country where the invoice was generated and
     * where the user has driven. The price is always calculated in
     * <i>Eurocents</i> to avoid issues with floating point numbers.
     */
    @NonNull
    private int price;
}
